{"version":3,"sources":["webpack:///./src/components/api/APICard.js","webpack:///./src/pages/api.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["APICard","_ref","to","href","icon","img","iconClass","children","react_default","a","createElement","common","className","elevation","name","src","propTypes","PropTypes","string","node","isRequired","APIPage","data","location","imageUrl","getMetaImageUrls","sectionStyles","Fragment","meta","type","title","description","image","layout","mainClass","bodyClass","Spirit","page","xl","sectionHeading","sectionSubHeading","l","id","h3","small","api_APICard","shape","site","siteMetadata","siteUrl","pathname","pageQuery","imageUrls","default","url","resolve","process","section","proptypes","__webpack_require__","d","__webpack_exports__","MetaData_default","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-api-js-dceacef3d54ad9bf44d9.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../common'\n\nconst APICard = ({ to, href, icon, img, iconClass, children }) => (\n    <Box\n        to={to || null}\n        href={href}\n        className=\"br4 flex flex-column justify-between items-center middarkgrey pa2 pt8 pb5 tdn\"\n        elevation={!href && !to ? `1` : `2`}\n    >\n        {icon ? <div className=\"w10 h10 flex justify-center items-center\"><Icon name={icon} className={`w10 h10 mb4 ${iconClass}`}></Icon></div> : null}\n        {img ? <div className=\"w10 h10 flex justify-center items-center\"><img src={img} className=\"nudge-bottom--4\" /></div> : null}\n        <span className={(!to && !href ? `o-50` : ``)}>{children}</span>\n    </Box>\n)\n\nAPICard.propTypes = {\n    to: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    img: PropTypes.string,\n    iconClass: PropTypes.string,\n    children: PropTypes.node.isRequired,\n}\n\nexport default APICard\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { APICard } from '../components/api';\nimport { Layout } from '../components/common/layout';\nimport { getMetaImageUrls, MetaData } from '../components/common/meta';\nimport { Spirit } from '../styles/spirit-styles';\n\n\nconst APIPage = ({ data, location }) => {\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = `API Reference - Ghost`\n    const description = `Comprehensive documentation of API clients, tools and libraries for working with Ghost.`\n    const imageUrl = getMetaImageUrls()\n\n    const sectionStyles = {\n        headingContainer: `col-12 col-4-ns mr10-ns`,\n        cardContainer: `col-12 col-8-ns mt-vw4 mt0-ns grid-icon-boxes`,\n    }\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2\" bodyClass=\"bg-white\">\n                <section className=\"bg-api-reference\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>API Reference</h1>\n                        <p className={Spirit.sectionSubHeading}>Clients, tools and libraries for working with Ghost</p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.l} pb-vw4 pb-vw3-ns pt-vw4 pt-vw3-ns`}>\n                    <div className=\"grid-12\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"frontend-sdk\" className={`${Spirit.h3} pt20 nt20`}>Frontend SDKs</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Frameworks for working with the Ghost API to build a publication website</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/handlebars-themes/\" icon=\"handlebars-logo\">Handlebars</APICard>\n                            <APICard to=\"/api/gatsby/\" icon=\"gatsby-logo\">Gatsby</APICard>\n                            <APICard to=\"/api/helpers/\" icon=\"javascript-logo\">Vanilla JS</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"rest-api\" className={`${Spirit.h3} pt20 nt20`}>REST API</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>A full reference of API Endpoints</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/content/\" icon=\"content-api-logo\">Content API</APICard>\n                            <APICard to=\"/api/admin/\" icon=\"admin-api-logo\">Admin API</APICard>\n                            <APICard to=\"/api/webhooks/\" icon=\"webhooks-logo\">Webhooks</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"tools\" className={`${Spirit.h3} pt20 nt20`}>Tools</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Utilities to help build and manage Ghost</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/ghost-cli/\" icon=\"ghost-cli-logo\">Ghost-CLI</APICard>\n                            <APICard to=\"/api/migration/\" icon=\"migration-logo\">Migration</APICard>\n                            <APICard href=\"https://gscan.vwa.la\" icon=\"gscan-logo\">GScan</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"client-libraries\" className={`${Spirit.h3} pt20 nt18`}>Client Libraries</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Specific libraries for interacting with the Ghost API directly</p>\n                            <h4 className=\"f-supersmall dib ma0 pa0 bg-green pa1 br-pill pl3 pr3 tc white mt2 nudge-top--2\">Coming soon</h4>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/javascript/\" icon=\"javascript-logo\">JavaScript</APICard>\n                            <APICard icon=\"ruby-logo\" iconClass=\"stroke-midlightgrey o-30\">Ruby</APICard>\n                            <APICard icon=\"php-logo\" iconClass=\"stroke-midlightgrey o-30\">PHP</APICard>\n                            <APICard icon=\"python-logo\" iconClass=\"stroke-midlightgrey o-30\">Python</APICard>\n                            <APICard icon=\"apple-logo\" iconClass=\"stroke-midlightgrey o-30\">iOS</APICard>\n                            <APICard icon=\"android-logo\" iconClass=\"stroke-midlightgrey o-30\">Android</APICard>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nAPIPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default APIPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import PropTypes from 'prop-types';\nimport url from 'url';\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.vwa.la`\n\nconst imageUrls = {\n    // faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    // integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    // tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/hero.png`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}