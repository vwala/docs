{"version":3,"sources":["webpack:///./src/templates/ghost/tutorial-archive.js"],"names":["__webpack_require__","r","__webpack_exports__","d","tagsQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_components_common_layout__WEBPACK_IMPORTED_MODULE_3__","_components_tutorials__WEBPACK_IMPORTED_MODULE_4__","_styles_spirit_styles__WEBPACK_IMPORTED_MODULE_5__","_components_common_meta__WEBPACK_IMPORTED_MODULE_6__","TutorialsTags","_ref","data","location","pageContext","posts","allGhostPost","edges","tagURL","tagName","tagDescription","tagImage","tagMetaTitle","tagMetaDescription","section","title","description","imageUrl","getMetaImageUrls","a","createElement","Fragment","type","site","siteMetadata","image","headerDividerStyle","className","Spirit","page","xl","h4","to","map","_ref2","node","key","id","post","propTypes","PropTypes","shape","siteUrl","string","isRequired","object","pathname"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAUMgB,EAAgB,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YAC/BC,EAAQH,EAAKI,aAAaC,MACxBC,EAAyFJ,EAAzFI,OAAQC,EAAiFL,EAAjFK,QAASC,EAAwEN,EAAxEM,eAAgBC,EAAwDP,EAAxDO,SAAUC,EAA8CR,EAA9CQ,aAAcC,EAAgCT,EAAhCS,mBAAoBC,EAAYV,EAAZU,QAG/EC,EAAQH,GAAY,eAAmBH,EAAnB,WACpBO,EAAcH,GAAsBH,GAAtB,GACdO,EAAWN,GAAYO,YAAiBJ,GAE9C,OACIxB,EAAA6B,EAAAC,cAAA9B,EAAA6B,EAAAE,SAAA,KACI/B,EAAA6B,EAAAC,cAACrB,EAAA,EAAD,CACIG,KAAMA,EACNC,SAAUA,EACVmB,KAAK,SACLP,MAAOA,GAASb,EAAKqB,KAAKC,aAAaT,MACvCC,YAAaA,GAAed,EAAKqB,KAAKC,aAAaR,YACnDS,MAAOR,IAEX3B,EAAA6B,EAAAC,cAACxB,EAAA,EAAD,CAAQ8B,mBAAmB,UACvBpC,EAAA6B,EAAAC,cAAA,OAAKO,UAAU,gBACXrC,EAAA6B,EAAAC,cAAA,OAAKO,UAAcC,IAAOC,KAAKC,GAAjB,kCACVxC,EAAA6B,EAAAC,cAAA,MAAIO,UAAcC,IAAOG,GAAZ,sCACTzC,EAAA6B,EAAAC,cAACzB,EAAAwB,EAAD,CAAMa,GAAE,IAAMlB,EAAN,IAAkBa,UAAU,sBAApC,aACArC,EAAA6B,EAAAC,cAAA,QAAMO,UAAU,2CACZrC,EAAA6B,EAAAC,cAACzB,EAAAwB,EAAD,CAAMa,GAAIxB,EAAQmB,UAAU,kBAAkBlB,OAK9DnB,EAAA6B,EAAAC,cAAA,OAAKO,UAAcC,IAAOC,KAAKC,GAAjB,qBACVxC,EAAA6B,EAAAC,cAAA,WAASO,UAAU,qBACdtB,EAAM4B,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACP7C,EAAA6B,EAAAC,cAACvB,EAAA,EAAD,CAAcuC,IAAKD,EAAKE,GAAIC,KAAMH,EAAMR,UAAU,QAAQb,QAASA,WAS/Fd,EAAcuC,UAAY,CACtBrC,KAAMsC,IAAUC,MAAM,CAClBlB,KAAMiB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUC,MAAM,CAC1BC,QAASF,IAAUG,OAAOC,WAC1B7B,MAAOyB,IAAUG,OAAOC,WACxB5B,YAAawB,IAAUG,OAAOC,aAC/BA,aACJA,WACHtC,aAAckC,IAAUK,OAAOD,aAChCA,WACHzC,SAAUqC,IAAUC,MAAM,CACtBK,SAAUN,IAAUG,OAAOC,aAC5BA,WACHxC,YAAaoC,IAAUC,MAAM,CACzB3B,QAAS0B,IAAUG,OAAOC,WAC1BnC,QAAS+B,IAAUG,OAAOC,WAC1BpC,OAAQgC,IAAUG,OAAOC,WACzBlC,eAAgB8B,IAAUG,OAC1B9B,mBAAoB2B,IAAUG,OAC9B/B,aAAc4B,IAAUG,OACxBhC,SAAU6B,IAAUG,SACrBC,YAGQ5C,YAER,IAAMZ,EAAS","file":"component---src-templates-ghost-tutorial-archive-js-916538a8b862688ac898.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport { Layout } from '../../components/common/layout'\nimport { TutorialCard } from '../../components/tutorials'\nimport { Spirit } from '../../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../../components/common/meta'\n\nconst TutorialsTags = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges\n    const { tagURL, tagName, tagDescription, tagImage, tagMetaTitle, tagMetaDescription, section } = pageContext\n\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = tagMetaTitle || `Tutorials - ${tagName} - Ghost`\n    const description = tagMetaDescription || tagDescription || ``\n    const imageUrl = tagImage || getMetaImageUrls(section)\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"series\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout headerDividerStyle=\"shadow\">\n                <div className=\"bg-tutorials\">\n                    <div className={`${Spirit.page.xl} pt-vw7 pt-vw1-ns pb-vw1 white`}>\n                        <h1 className={`${Spirit.h4} gh-integration-header-shadow pl10`}>\n                            <Link to={`/${section}/`} className=\"link dim white fw3\">Tutorials</Link>\n                            <span className=\"white titleslash-white pl4 ml4 relative\">\n                                <Link to={tagURL} className=\"link dim white\">{tagName}</Link>\n                            </span>\n                        </h1>\n                    </div>\n                </div>\n                <div className={`${Spirit.page.xl} mt-vw5 mt-vw2-ns`}>\n                    <section className=\"grid-12 gutter-32\">\n                        {posts.map(({ node }) => (\n                            <TutorialCard key={node.id} post={node} className=\"col-4\" section={section} />\n                        ))}\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nTutorialsTags.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    pageContext: PropTypes.shape({\n        section: PropTypes.string.isRequired,\n        tagName: PropTypes.string.isRequired,\n        tagURL: PropTypes.string.isRequired,\n        tagDescription: PropTypes.string,\n        tagMetaDescription: PropTypes.string,\n        tagMetaTitle: PropTypes.string,\n        tagImage: PropTypes.string,\n    }).isRequired,\n}\n\nexport default TutorialsTags\n\nexport const tagsQuery = graphql`\n    query($tagSlug: String!) {\n        site {\n            ...SiteMetaFields\n        }\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] },\n            limit: 100,\n            filter: {tags: {elemMatch: {slug: {eq: $tagSlug}}}}\n        ) {\n            edges {\n                node {\n                    ...GhostPostListFields\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}