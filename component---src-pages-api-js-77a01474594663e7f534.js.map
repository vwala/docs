{"version":3,"sources":["webpack:///./src/components/api/APICard.js","webpack:///./src/pages/api.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["APICard","_ref","to","href","icon","img","iconClass","children","react_default","a","createElement","common","className","elevation","name","src","propTypes","PropTypes","string","node","isRequired","APIPage","data","location","imageUrl","getMetaImageUrls","sectionStyles","Fragment","meta","type","title","description","image","layout","mainClass","bodyClass","Spirit","page","xl","sectionHeading","sectionSubHeading","l","id","h3","small","api_APICard","shape","site","siteMetadata","siteUrl","pathname","pageQuery","ImageMeta","Helmet_default","content","property","ArticleMetaMD","canonical","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","primaryTag","keywords","length","seoImage","meta_title","meta_description","excerpt","rel","map","keyword","i","key","timeToRead","_","join","meta_ImageMeta","arrayOf","number","WebsiteMeta","oneOf","MetaData","fetchAuthorData","overwriteDefaultImage","_ref2","ghostPost","url","resolve","meta_ArticleMetaMD","meta_WebsiteMeta","object","bool","imageUrls","default","process","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-api-js-77a01474594663e7f534.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Icon, Box } from '../common'\n\nconst APICard = ({ to, href, icon, img, iconClass, children }) => (\n    <Box\n        to={to || null}\n        href={href}\n        className=\"br4 flex flex-column justify-between items-center middarkgrey pa2 pt8 pb5 tdn\"\n        elevation={!href && !to ? `1` : `2`}\n    >\n        {icon ? <div className=\"w10 h10 flex justify-center items-center\"><Icon name={icon} className={`w10 h10 mb4 ${iconClass}`}></Icon></div> : null}\n        {img ? <div className=\"w10 h10 flex justify-center items-center\"><img src={img} className=\"nudge-bottom--4\" /></div> : null}\n        <span className={(!to && !href ? `o-50` : ``)}>{children}</span>\n    </Box>\n)\n\nAPICard.propTypes = {\n    to: PropTypes.string,\n    href: PropTypes.string,\n    icon: PropTypes.string,\n    img: PropTypes.string,\n    iconClass: PropTypes.string,\n    children: PropTypes.node.isRequired,\n}\n\nexport default APICard\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { APICard } from '../components/api';\nimport { Layout } from '../components/common/layout';\nimport { getMetaImageUrls, MetaData } from '../components/common/meta';\nimport { Spirit } from '../styles/spirit-styles';\n\n\nconst APIPage = ({ data, location }) => {\n    // Add meta title and description or this page here to overwrite the site meta data as set in the config\n    const title = `API Reference - Ghost`\n    const description = `Comprehensive documentation of API clients, tools and libraries for working with Ghost.`\n    const imageUrl = getMetaImageUrls()\n\n    const sectionStyles = {\n        headingContainer: `col-12 col-4-ns mr10-ns`,\n        cardContainer: `col-12 col-8-ns mt-vw4 mt0-ns grid-icon-boxes`,\n    }\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2\" bodyClass=\"bg-white\">\n                <section className=\"bg-api-reference\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>API Reference</h1>\n                        <p className={Spirit.sectionSubHeading}>Clients, tools and libraries for working with Ghost</p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.l} pb-vw4 pb-vw3-ns pt-vw4 pt-vw3-ns`}>\n                    <div className=\"grid-12\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"frontend-sdk\" className={`${Spirit.h3} pt20 nt20`}>Frontend SDKs</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Frameworks for working with the Ghost API to build a publication website</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/handlebars-themes/\" icon=\"handlebars-logo\">Handlebars</APICard>\n                            <APICard to=\"/api/gatsby/\" icon=\"gatsby-logo\">Gatsby</APICard>\n                            <APICard to=\"/api/helpers/\" icon=\"javascript-logo\">Vanilla JS</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"rest-api\" className={`${Spirit.h3} pt20 nt20`}>REST API</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>A full reference of API Endpoints</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/content/\" icon=\"content-api-logo\">Content API</APICard>\n                            <APICard to=\"/api/admin/\" icon=\"admin-api-logo\">Admin API</APICard>\n                            <APICard to=\"/api/webhooks/\" icon=\"webhooks-logo\">Webhooks</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"tools\" className={`${Spirit.h3} pt20 nt20`}>Tools</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Utilities to help build and manage Ghost</p>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/ghost-cli/\" icon=\"ghost-cli-logo\">Ghost-CLI</APICard>\n                            <APICard to=\"/api/migration/\" icon=\"migration-logo\">Migration</APICard>\n                            <APICard href=\"https://gscan.vwa.la\" icon=\"gscan-logo\">GScan</APICard>\n                        </div>\n                    </div>\n\n                    <div className=\"grid-12 mt-vw4 mt20-ns\">\n                        <div className={sectionStyles.headingContainer}>\n                            <h2 id=\"client-libraries\" className={`${Spirit.h3} pt20 nt18`}>Client Libraries</h2>\n                            <p className={`${Spirit.small} midgrey-l2 mt2`}>Specific libraries for interacting with the Ghost API directly</p>\n                            <h4 className=\"f-supersmall dib ma0 pa0 bg-green pa1 br-pill pl3 pr3 tc white mt2 nudge-top--2\">Coming soon</h4>\n                        </div>\n                        <div className={sectionStyles.cardContainer}>\n                            <APICard to=\"/api/javascript/\" icon=\"javascript-logo\">JavaScript</APICard>\n                            <APICard icon=\"ruby-logo\" iconClass=\"stroke-midlightgrey o-30\">Ruby</APICard>\n                            <APICard icon=\"php-logo\" iconClass=\"stroke-midlightgrey o-30\">PHP</APICard>\n                            <APICard icon=\"python-logo\" iconClass=\"stroke-midlightgrey o-30\">Python</APICard>\n                            <APICard icon=\"apple-logo\" iconClass=\"stroke-midlightgrey o-30\">iOS</APICard>\n                            <APICard icon=\"android-logo\" iconClass=\"stroke-midlightgrey o-30\">Android</APICard>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nAPIPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default APIPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { getMetaImageUrls } from '.';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n                <meta name=\"twitter:creator\" content=\"@vwalamarketing\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://vwa.la/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/vwalamarketing/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.vwa.la/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport ImageMeta from './ImageMeta';\n\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n    <>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <link rel=\"canonical\" href={canonical} />\n            <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:url\" content={canonical} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:url\" content={canonical} />\n            <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n            <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n        </Helmet>\n        <ImageMeta image={image} />\n    </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport url from 'url';\n// import ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD';\nimport WebsiteMeta from './WebsiteMeta';\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            // return (\n            //     <ArticleMetaGhost\n            //         data={data}\n            //         canonical={canonical}\n            //         fetchAuthorData={fetchAuthorData}\n            //         title={title}\n            //         image={image}\n            //         overwriteDefaultImage={overwriteDefaultImage}\n            //     />\n            // )\n            return null\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types';\nimport url from 'url';\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.vwa.la`\n\nconst imageUrls = {\n    // faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    // integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    // tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/hero.png`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}