{"version":3,"sources":["webpack:///./src/pages/integrations.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_integrations__WEBPACK_IMPORTED_MODULE_2__","_components_common_meta__WEBPACK_IMPORTED_MODULE_3__","IntegrationsPage","_ref","data","location","imageUrl","getMetaImageUrls","posts","allGhostPost","edges","a","createElement","Fragment","type","title","description","image","propTypes","PropTypes","shape","site","siteMetadata","siteUrl","string","isRequired","object","pathname"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAOMY,EAAmB,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SAIxBC,EAAWC,YAAgB,gBAE3BC,EAAQJ,EAAKK,aAAaC,MAEhC,OACId,EAAAe,EAAAC,cAAAhB,EAAAe,EAAAE,SAAA,KACIjB,EAAAe,EAAAC,cAACX,EAAA,EAAD,CACIG,KAAMA,EACNC,SAAUA,EACVS,KAAK,UACLC,MAZD,wEAaCC,YAZK,sJAaLC,MAAOX,IAEXV,EAAAe,EAAAC,cAACZ,EAAA,EAAD,CACIQ,MAAOA,EACPH,SAAUA,MAM1BH,EAAiBgB,UAAY,CACzBd,KAAMe,IAAUC,MAAM,CAClBC,KAAMF,IAAUC,MAAM,CAClBE,aAAcH,IAAUC,MAAM,CAC1BG,QAASJ,IAAUK,OAAOC,WAC1BV,MAAOI,IAAUK,OAAOC,WACxBT,YAAaG,IAAUK,OAAOC,aAC/BA,aACJA,WACHhB,aAAcU,IAAUO,OAAOD,aAChCA,WACHpB,SAAUc,IAAUC,MAAM,CACtBO,SAAUR,IAAUK,OAAOC,aAC5BA,YAGQvB,YAER,IAAMR,EAAS","file":"component---src-pages-integrations-js-d8ac200d2fef26622a48.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport { IntegrationsContent } from '../components/integrations'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\n\nconst IntegrationsPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `Ghost Integrations â€“ Connect your favourite Tools & Apps to your site`\n    const description = `Keep your stack aligned and integrate your most used tools & apps with your Ghost site: automation, analytics, marketing, support and much more! ðŸ‘‰`\n    const imageUrl = getMetaImageUrls(`integrations`)\n\n    const posts = data.allGhostPost.edges\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <IntegrationsContent\n                posts={posts}\n                location={location}\n            />\n        </>\n    )\n}\n\nIntegrationsPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        allGhostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default IntegrationsPage\n\nexport const pageQuery = graphql`\n  query GhostIntegrationsQuery {\n    site {\n        ...SiteMetaFields\n    }\n    allGhostPost(\n        sort: { order: ASC, fields: [published_at] },\n        limit: 100,\n        filter: {tags: {elemMatch: {slug: {eq: \"hash-integration\"}}}}\n    ) {\n      edges {\n        node {\n          ...GhostPostListFields\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}