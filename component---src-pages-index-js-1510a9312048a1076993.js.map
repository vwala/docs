{"version":3,"sources":["webpack:///./src/components/home/HomeHeaderBox.js","webpack:///./src/components/home/HomeHeader.js","webpack:///./src/components/home/HomeAPIBox.js","webpack:///./src/components/home/HomeFAQLink.js","webpack:///./src/pages/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["HomeHeaderBox","_ref","to","title","color","icon","children","react_default","a","createElement","gatsby_browser_entry","className","common","name","Spirit","h4","small","propTypes","PropTypes","string","isRequired","node","HomeHeader","theme","page","xl","search","isHome","home_HomeHeaderBox","HomeAPIBox","h5","HomeFAQLink","__webpack_require__","d","__webpack_exports__","pageQuery","HomePage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","headerDividerStyle","bodyClass","mainClass","header","home_HomeHeader","style","display","justifyContent","home_HomeAPIBox","shape","site","siteMetadata","siteUrl","pathname","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","href","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","imageUrls","default","process","section","proptypes","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-index-js-1510a9312048a1076993.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeHeaderBox = ({ to, title, color, icon, children }) => (\n    <Link to={to} className=\"col-12 col-4-ns pa5 pa8-ns pa10-l pt8-l flex flex-column-ns items-start tdn content-stretch home-main-box-shadow db br4 bg-white\">\n        <Icon name={icon} className={`w10 h-auto w12-ns stroke-w--1-5 mr3 mb2 stroke-${color}`} />\n        <div className=\"flex flex-column justify-between flex-auto\">\n            <div>\n                <h2 className={`${Spirit.h4} mt0 mt2-ns darkgrey flex-shrink-1`}>{title}</h2>\n                <p className={`${Spirit.small} midgrey`}>{children}</p>\n            </div>\n            <span className={`${color} dib mt2 link fw5 f7 f5-ns flex items-center`}>\n                Learn more\n                <Icon name=\"arrow-right\" className={`w3 h3 ml2 fill-${color}`} />\n            </span>\n        </div>\n    </Link>\n)\n\nHomeHeaderBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeHeaderBox\n","import React from 'react';\nimport { Spirit } from '../../styles/spirit-styles';\nimport { NavBar } from '../common';\nimport { SearchModal } from '../common/search';\nimport HomeHeaderBox from './HomeHeaderBox';\n\n\n// Custom headings must be React components. You should include the <NavBar /> component\n// somewhere in it. You can optionally set the theme of the navbar to `dark` or `light`.\nconst HomeHeader = () => (\n    <div className=\"gh-bg-home bb b--whitegrey\">\n        <header className=\"top-0 left-0 right-0 z-9999\">\n            <NavBar theme=\"light\" />\n        </header>\n        <div className={`${Spirit.page.xl} pb5 pt10 pt15-ns pt20-l pb10-ns pb15-l flex flex-column items-center bt bn-ns b--white-10`}>\n            <h1 className=\"ma0 pa0 f2 f1-ns f-headline-l white header-heading-shadow\">Need help?</h1>\n            <SearchModal isHome />\n\n            <section className=\"grid-12 gutter-row-20 gutter-36-ns mt10 mt20-ns mt25-l miw-100 miw-auto-ns home-main-box-margin-ns z-999\">\n                <HomeHeaderBox\n                    to=\"/merchant/getting-started/\"\n                    title=\"Merchant help\"\n                    icon=\"rocket\"\n                    color=\"purple\"\n                >\n                    Everything a merchant needs to know\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/influencer/getting-started/\"\n                    title=\"Influencer help\"\n                    icon=\"rocket\"\n                    color=\"blue\"\n                >\n                    Everything an influencer needs to know\n                </HomeHeaderBox>\n\n                <HomeHeaderBox\n                    to=\"/releases/2019-01-31/\"\n                    title=\"Product releases\"\n                    icon=\"blocks\"\n                    color=\"midgrey\"\n                >\n                    Keep up to date with our releases\n                </HomeHeaderBox>\n            </section>\n        </div>\n    </div >\n)\n\nexport default HomeHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\nimport { Icon } from '../common'\n\nconst HomeAPIBox = ({ to, icon, title, children }) => (\n    <Link to={to} className=\"flex items-start pa4 pa7-ns tdn bb b--whitegrey justify-between mih-10 flex-auto api-box\">\n        <span className=\"dib mr3 mt3 miw10 tc\"><Icon name={icon} className=\"stroke-middarkgrey-l2\" /></span>\n        <div className=\"flex-auto\">\n            <h4 className={`${Spirit.h5} darkgrey mt2 mt0-l`}>{title}</h4>\n            <p className={`${Spirit.small} midgrey`}>{children}</p>\n        </div>\n    </Link>\n)\n\nHomeAPIBox.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeAPIBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst HomeFAQLink = ({ to, title, children }) => (\n    <Link to={to} className=\"midgrey home-faq-question link dib pt1 pb5\">\n        <h4 className={`${Spirit.h5} blue dib`}>{title} &raquo;</h4>\n        <p className={`${Spirit.small} mt0`}>{children}</p>\n    </Link>\n)\n\nHomeFAQLink.propTypes = {\n    to: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}\n\nexport default HomeFAQLink\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Layout } from '../components/common/layout';\nimport { getMetaImageUrls, MetaData } from '../components/common/meta';\nimport { HomeAPIBox, HomeHeader } from '../components/home';\nimport { Spirit } from '../styles/spirit-styles';\n\n\nconst HomePage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `vwa.la help`\n    const description = `Everything you need to know about the vwa.la influencer marketing platform.`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title}\n                description={description}\n                image={imageUrl}\n            />\n            <Layout\n                headerDividerStyle=\"shadow\"\n                bodyClass=\"bg-white\"\n                mainClass=\"bg-whitegrey-l2 pb-vw6 pb-vw3-ns\"\n                header={<HomeHeader />}\n            >\n                <div className=\"pt-vw3 home-main-box-padding-ns\">\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div className={`${Spirit.page.xl}`}>\n                            <HomeAPIBox\n                                to=\"/user\"\n                                title=\"Account help\"\n                                icon=\"sdks\"\n                            >\n                                Account management help\n                        </HomeAPIBox>\n                        </div>\n                    </div>\n\n                    {/* <div className={`${Spirit.page.xl} grid-12 gutter-row-20 gutter-40-ns`}>\n\n                        <section className=\"col-12 col-6-ns flex flex-column justify-between mt4 mt0-ns\">\n                            <Link to=\"/api/\" className={`${Spirit.h3} link darkgrey hover-midgrey flex-grow-0`}>API Reference</Link>\n\n                            <Box className=\"mt5 tdn flex-auto flex flex-column items-stretch\" elevation=\"1\">\n                                <HomeAPIBox\n                                    to=\"/api/#frontend-sdk\"\n                                    title=\"Frontend SDKs\"\n                                    icon=\"sdks\"\n                                >\n                                    Frameworks for working with the Ghost API to build a publication website\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"/api/#rest-api\"\n                                    title=\"Rest API\"\n                                    icon=\"rest-api\"\n                                >\n                                    A full reference of API Endpoints\n                                </HomeAPIBox>\n                                <HomeAPIBox\n                                    to=\"/api/#tools\"\n                                    title=\"Tools\"\n                                    icon=\"tools\"\n                                >\n                                    Utilities to help build and manage Ghost\n                                </HomeAPIBox>\n                            </Box>\n                        </section>\n\n                        <section className=\"col-12 col-6-ns mt0-ns bt bn-ns b--whitegrey nl5 nr5 nl0-ns nr0-ns ml0-ns mr0-ns pl5 pr5 pl0-ns pr0-ns pt5 pt0-ns \">\n                            <Link to=\"/faq/\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>FAQ</Link>\n                            <div className=\"mt3 mt7-ns\">\n                                <HomeFAQLink to=\"/faq/upgrade-to-ghost-2-0/\" title=\"Upgrade to Ghost 2.0\">\n                                    Ghost 2.0 was released in September 2018 and the second major upgrade since the platform launched. Learn how to upgrade\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/using-custom-domains/\" title=\"Using Custom Domains\">\n                                    Map any domain you own directly to your Ghost(Pro) publication and make your site more memorable!\n                                </HomeFAQLink>\n\n                                <HomeFAQLink to=\"/faq/upgrading-from-deprecated-ghost-cli/\" title=\"Upgrading from deprecated Ghost CLI\">\n                                    If you are using a deprecated version and need to upgrade in order to upgrade or manage your Ghost site, some extra steps may be required.\n                                </HomeFAQLink>\n\n                                <Link to=\"/faq/\" className={`${Spirit.p} midgrey fw5 link hover-blue`}>More FAQ...</Link>\n                            </div>\n                        </section>\n                    </div> */}\n\n\n                    {/* <section className={`${Spirit.page.xl} col-12 mt8 mt-vw3-ns bt bn-ns b--whitegrey pt5 pt0-ns`}>\n                        <Link to=\"/integrations/\" className={`${Spirit.h3} link darkgrey hover-midgrey`}>Integrations</Link>\n                        <p className={`${Spirit.p} mt2 midgrey flex flex-column flex-row-ns justify-between items-center-ns`}>\n                            All your favourite apps and tools, integrated with Ghost.\n                            <Link to=\"/integrations/\" className=\"blue link din nb1 mt2 mt0-ns hover-underline-blue\">\n                                <span className=\"flex items-center fw5\">Browse all integrations <Icon name=\"arrow-right\" className=\"w3 h3 ml1 fill-blue\" /></span>\n                            </Link>\n                        </p>\n                        <div className=\"grid-integrations-index mt4 mt6-l f8\">\n                            <Box to=\"/integrations/zapier/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/zapier.png\" alt=\"Zapier\" />\n                                Zapier\n                            </Box>\n                            <Box to=\"/integrations/disqus/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/disqus.svg\" alt=\"Disqus\" />\n                                Disqus\n                            </Box>\n                            <Box to=\"/integrations/slack/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/slack.png\" alt=\"Slack\" />\n                                Slack\n                            </Box>\n                            <Box to=\"/integrations/unsplash/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/unsplash.svg\" alt=\"Unsplash\" />\n                                Unsplash\n                            </Box>\n                            <Box to=\"/integrations/google-analytics/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/google-analytics-1.png\" alt=\"Google Analytics\" />\n                                Google Analytics\n                            </Box>\n                            <Box to=\"/integrations/mailchimp/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/mailchimp.png\" alt=\"Mailchimp\" />\n                                Mailchimp\n                            </Box>\n                            <Box to=\"/integrations/google-amp/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn tc\" elevation=\"2\" radius=\"4\">\n                                <img className=\"w10 mb1\" src=\"https://res.cloudinary.com/tryghost/image/fetch/w_120,h_100,c_fit/https://docs.ghost.io/content/images/2018/09/amp.jpg\" alt=\"Google AMP\" />\n                                Google AMP\n                            </Box>\n                            <Box to=\"/integrations/\" className=\"flex flex-column justify-between items-center middarkgrey pa2 pt5 pb5 tdn\" elevation=\"2\" radius=\"4\">\n                                <Icon name=\"more\" className=\"w8 nudge-top--6\" />\n                                See More\n                            </Box>\n                        </div>\n                    </section> */}\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nHomePage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://vwa.la/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import { tags as tagsHelper } from '@tryghost/helpers';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport getAuthorProperties from './getAuthorProperties';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/vwalamarketing/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n                <meta name=\"twitter:creator\" content=\"@vwalamarketing\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { getMetaImageUrls } from '.';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n                <meta name=\"twitter:creator\" content=\"@vwalamarketing\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://vwa.la/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/vwalamarketing/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.vwa.la/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport ImageMeta from './ImageMeta';\n\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n    <>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <link rel=\"canonical\" href={canonical} />\n            <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:url\" content={canonical} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:url\" content={canonical} />\n            <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n            <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n        </Helmet>\n        <ImageMeta image={image} />\n    </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types';\nimport url from 'url';\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.vwa.la`\n\nconst imageUrls = {\n    // faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    // integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    // tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/hero.png`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}