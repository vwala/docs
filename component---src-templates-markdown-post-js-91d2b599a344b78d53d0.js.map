{"version":3,"sources":["webpack://am-docs/./src/components/common/sidebar/SidebarLink.js","webpack://am-docs/./src/components/common/sidebar/SidebarList.js","webpack://am-docs/./src/components/common/sidebar/getSidebarFile.js","webpack://am-docs/./src/components/common/sidebar/SidebarNav.js","webpack://am-docs/./src/components/common/prev-next/PrevNext.js","webpack://am-docs/./src/components/common/prev-next/PrevNextSection.js","webpack://am-docs/./src/templates/markdown/post.js","webpack://am-docs//Users/Danijel/projects/am/am-docs/src/data/sidebars|sync|/^\\.\\/.*\\.yaml$/"],"names":["link","title","linkClasses","match","href","className","target","rel","Link","to","props","items","location","map","item","j","key","pathname","getSidebarFile","sidebar","sidebarfile","require","e","propTypes","PropTypes","SidebarNav","groups","group","i","some","defaultProps","trim","x","length","words","split","splice","join","prev","next","Icon","name","Spirit","flatSidebar","section","push","currentIndex","url","description","state","isToggleOn","toggleMobileMenu","bind","this","setState","render","post","data","markdownRemark","imageUrl","getMetaImageUrls","sideBarLayout","frontmatter","toc","leftSidebar","rightSidebar","listClasses","justification","showHeading","type","image","onClick","style","top","dangerouslySetInnerHTML","__html","html","React","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"component---src-templates-markdown-post-js-91d2b599a344b78d53d0.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst SidebarLink = ({ link, title, linkClasses }) => {\n    if (link) {\n        if (link.match(/^\\s?http(s?)/gi)) {\n            // use anchor links for external links\n            return <a href={link} className={`link db pv6px pr2 lh-1-5 pl0 ${linkClasses}`} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\n        } else {\n            return <Link to={link} className={`link db pv6px pr2 lh-1-5 pl0 ${linkClasses}`}>{title}</Link>\n        }\n    } else {\n        return (\n            <>{this.props.title}</>\n        )\n    }\n}\n\nSidebarLink.propTypes = {\n    link: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    linkClasses: PropTypes.string.isRequired,\n}\n\nexport default SidebarLink\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SidebarLink from './SidebarLink'\n\nconst SidebarList = ({ items, location }) => {\n    const linkClasses = `midgrey fw4 hover-blue-l2`\n    const activeLinkClasses = `sidebarlink-active blue fw6`\n\n    return (\n        <ul className=\"relative sidebar-list ma0 pa0 list mb5 pl6 mt1\">\n            {items.map((item, j) => (\n                <li key={j}>\n                    <SidebarLink\n                        link={item.link}\n                        title={item.title}\n                        linkClasses={(item.link === location.pathname ? activeLinkClasses : linkClasses)}\n                    />\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nSidebarList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SidebarList\n","import PropTypes from 'prop-types'\n\nconst getSidebarFile = (sidebar) => {\n    try {\n        // declare as var here, so it's accessible outside of the try scope\n        var [sidebarfile] = require(`../../../data/sidebars/${sidebar}.yaml`)\n    } catch (e) {\n        // TODO: make clear error handling here\n        throw e\n    }\n\n    return sidebarfile\n}\n\ngetSidebarFile.propTypes = {\n    sidebar: PropTypes.string.isRequired,\n}\n\nexport default getSidebarFile\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SidebarLink from './SidebarLink'\nimport SidebarList from './SidebarList'\nimport getSidebarFile from './getSidebarFile'\n\nconst SidebarNav = ({ sidebar, location }) => {\n    const sidebarfile = getSidebarFile(sidebar)\n\n    if (!sidebar || !sidebarfile || !sidebarfile.groups) {\n        return null\n    }\n\n    return (\n        <nav className=\"mt5 mb5 mt10-ns mb0-ns relative\" data-cy=\"sidebar\">\n            {sidebarfile.groups.map((group, i) => (\n                <div key={i} className=\"mt1\">\n                    {group.items.some(item => (item.link === location.pathname)) ?\n                        // Render a sidebar list with children, if any of the nested elements\n                        // matches our current location, so the group needs to\n                        <>\n                            <h4 className=\"f5 fw5 link pa0 ma0\">\n                                {group.items[0].link ?\n                                    <SidebarLink link={group.items[0].link} title={group.group} linkClasses=\"midgrey link\" />\n                                    : group.group\n                                }\n                            </h4>\n                            <SidebarList\n                                key={i}\n                                items={group.items}\n                                location={location}\n                            />\n                        </>\n                        : <h4 className=\"f5 fw5 link pa0 ma0\">{(group.items[0].link ? <SidebarLink link={group.items[0].link} title={group.group} linkClasses=\"midgrey hover-blue-l2 link\" /> : group.group)}</h4>}\n                </div>\n            ))}\n        </nav>\n    )\n}\n\nSidebarNav.defaultProps = {\n    location: { pathname: `/` },\n}\n\nSidebarNav.propTypes = {\n    sidebar: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SidebarNav\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spirit } from '../../../styles/spirit-styles';\nimport Icon from '../Icon';\n\n\nconst trim = (x) => {\n    if (x && x.length > 40) {\n        let words = x.split(\" \")\n        return words.splice(0, words.length > 5 ? 5 : words.length).join(\" \") + \"..\"\n    }\n    return x\n}\n\nconst PrevNext = ({ prev, next }) => (\n    <div className=\"grid-12\">\n        {prev ?\n            <Link to={prev.link} className={`col-6 flex pa10 pl0 tdn justify-start items-center blue nudge-left--1 prevnext-hover ba b--transparent`}>\n                <Icon name=\"arrow-left\" className=\"w5 h5 fill-blue\" />\n                <div className=\"ml4\">\n                    {prev.group ? <h6 className=\"ma0 pa0 f8 fw4 midgrey lh-1-5\">{prev.group}</h6> : null}\n                    <p className={`${Spirit.excerpt} nt1 di fw5`}>{trim(prev.title)}</p>\n                </div>\n            </Link>\n            : <div className=\"col-6\"></div>\n        }\n        {next ?\n            <Link to={next.link} className={`col-6 flex pr0 pa10 tdn justify-end items-center blue prevnext-hover ba b--transparent`}>\n                <div className=\"tr mr4\">\n                    {next.group ? <h6 className=\"ma0 pa0 f8 fw4 midgrey lh-1-5\">{next.group}</h6> : null}\n                    <p className={`${Spirit.excerpt} nt1 di fw5`}>{trim(next.title)}</p>\n                </div>\n                <Icon name=\"arrow-right\" className=\"w5 h5 fill-blue\" />\n            </Link>\n            : <div className=\"col-6\"></div>\n        }\n    </div>\n)\n\nPrevNext.propTypes = {\n    prev: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        group: PropTypes.string,\n    }),\n    next: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        link: PropTypes.string.isRequired,\n        group: PropTypes.string,\n        description: PropTypes.string,\n    }),\n}\n\nexport default PrevNext\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport { getSidebarFile } from '../sidebar'\nimport PrevNext from './PrevNext'\n\nconst PrevNextSection = ({ sidebar, location, next }) => {\n    // TODO: find a more generic way for the `/concepts/` case\n    // Cover two cases:\n    // 1. `/concepts/` page that walks through the associated sidebar file\n    // 2. other pages, where we set a `next` property in frontmatter\n    // The following code serializes the data and pass it to a generic component.\n\n    if (sidebar) {\n        const sidebarfile = getSidebarFile(sidebar)\n\n        if (!sidebarfile) {\n            return null\n        }\n\n        const { groups } = sidebarfile\n        const flatSidebar = []\n\n        // Get all nested items and link and make a flat array\n        _.forEach(groups, (section) => {\n            _.forEach(section.items, (items) => {\n                // Remember the group our items belong to\n                items.group = section.group\n                flatSidebar.push(items)\n            })\n        })\n\n        const currentIndex = _.findIndex(flatSidebar, item => item.link === location.pathname)\n        const prev = flatSidebar[currentIndex - 1]\n        let next = flatSidebar[currentIndex + 1]\n\n        // Set the last page in \"Concepts\" to lead to the setup guide\n        if (!next && sidebar === `concepts`) {\n            next = { group: `Setup`, link: `/setup/`, title: `Install Ghost` }\n        }\n\n        return (\n            <PrevNext prev={prev} next={next} />\n        )\n    } else if (next && next.title && next.url) {\n        // We *must* have at least URL and title\n        const next = {\n            title: next.title,\n            link: next.url,\n            description: next.description || ``,\n        }\n\n        return (\n            <PrevNext next={next} />\n        )\n    } else {\n        return null\n    }\n}\n\nPrevNextSection.propTypes = {\n    sidebar: PropTypes.string,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    next: PropTypes.shape({\n        title: PropTypes.string,\n        url: PropTypes.string,\n    }),\n}\n\nexport default PrevNextSection\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, PostHeader, TOC } from '../../components/common';\nimport { Layout } from '../../components/common/layout';\nimport { getMetaImageUrls, MetaData } from '../../components/common/meta';\nimport { PrevNextSection } from '../../components/common/prev-next';\nimport { SidebarNav } from '../../components/common/sidebar';\nimport { Spirit } from '../../styles/spirit-styles';\n\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isToggleOn: false,\n        }\n\n        this.toggleMobileMenu = this.toggleMobileMenu.bind(this)\n    }\n\n    toggleMobileMenu() {\n        this.setState((state) => {\n            return { isToggleOn: !state.isToggleOn }\n        })\n    }\n\n    render() {\n        const { location } = this.props\n        const post = this.props.data.markdownRemark\n        const imageUrl = getMetaImageUrls()\n        const sideBarLayout = {}\n\n        const { sidebar } = post.frontmatter || ``\n        const toc = post.frontmatter.toc === false ? false : true\n\n        if (sidebar && toc) {\n            // Layout #1: navigation left and right: sidebar and TOC\n            sideBarLayout.leftSidebar = <SidebarNav location={location} sidebar={sidebar} />\n            sideBarLayout.rightSidebar = <div className=\"nr3 sticky top-25\"><TOC className=\"pr4\" listClasses=\"mt2\" /></div>\n            sideBarLayout.justification = `justify-between`\n        } else if (sidebar || toc) {\n            // Layout #2: navigation left only, either TOC or sidebar\n            sideBarLayout.leftSidebar = sidebar\n                ? <SidebarNav location={location} sidebar={sidebar} />\n                : <div className=\"nr3 sticky top-25\"><TOC listClasses=\"lefty\" className=\"mt5 mb5 mt10-ns mb0-ns\" showHeading={false} /></div>\n            sideBarLayout.justification = `justify-start`\n        } else {\n            // Layout #3: no sidebar navigation\n            sideBarLayout.justification = `justify-center`\n        }\n\n        return (\n            <>\n                <MetaData\n                    data={this.props.data}\n                    location={location}\n                    type=\"article\"\n                    image={imageUrl}\n                />\n                <Layout {...this.props}>\n                    <PostHeader location={location} />\n\n                    <div className={`${Spirit.page.xl} flex flex-column flex-row-ns ${sideBarLayout.justification} relative`}>\n                        <button\n                            onClick={() => this.toggleMobileMenu()}\n                            className=\"bg-transparent bn appearance-none absolute right-7 db dn-ns\"\n                            style={{ top: `-40px` }}\n                        >\n                            <Icon name=\"hamburger\" className=\"w6 h-auto stroke-white db dn-ns\" />\n                        </button>\n\n                        {sideBarLayout.leftSidebar ?\n                            <div className={`${(this.state.isToggleOn ? `mobile-nav-open` : ``)} w-100 w-sidebar-ns pr10 pl5 pl0-ns flex-shrink-0-l relative left-sidebar`}>\n                                {sideBarLayout.leftSidebar}\n                            </div>\n                            : null\n                        }\n                        <div>\n                            <div className={`w-100 mw-content bg-white shadow-2 br4 ${(this.state.isToggleOn ? `` : ` br--bottom`)}`}>\n                                <article className=\"flex-auto pa5 pa8-m pa15-l pt10-ns pb10-ns pt10-l pb10-l\">\n                                    <h1 className={`${Spirit.h1} darkgrey`}>{post.frontmatter.title}</h1>\n                                    <section\n                                        className=\"post-content external-scripts\"\n                                        dangerouslySetInnerHTML={{ __html: post.html }}\n                                    />\n                                </article>\n                                <div className=\"mw-content pl5 pr5 pl15-ns pr15-ns bt b--whitegrey mt5\">\n                                    <PrevNextSection\n                                        location={location}\n                                        sidebar={sidebar}\n                                        next={post.frontmatter.next}\n                                    />\n                                </div>\n                            </div>\n                            {/* <FeedbackForm location={location} /> */}\n                        </div>\n                        {sideBarLayout.rightSidebar ?\n                            <div className=\"order-3 w-sidebar flex-shrink-0 dn db-l pt10 pl7\">\n                                {sideBarLayout.rightSidebar}\n                            </div>\n                            : null\n                        }\n                    </div>\n                </Layout>\n            </>\n        )\n    }\n}\n\nPost.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                toc: PropTypes.bool,\n                sidebar: PropTypes.string,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Post\n\nexport const articleQuery = graphql`\n    query($slug: String!) {\n        site {\n            ...SiteMetaFields\n        }\n        markdownRemark(fields: { slug: {eq: $slug}}) {\n            ...MarkdownFields\n        }\n    }\n`\n","var map = {\n\t\"./influencer.yaml\": 17629,\n\t\"./merchant.yaml\": 87131,\n\t\"./releases.yaml\": 77124,\n\t\"./user.yaml\": 3309\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74500;"],"sourceRoot":""}