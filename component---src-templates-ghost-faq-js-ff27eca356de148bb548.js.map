{"version":3,"sources":["webpack:///./src/templates/ghost/faq.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["FAQ","componentDidMount","Prism","highlightAll","render","post","this","props","data","ghostPost","_this$props$pageConte","pageContext","relatedPosts","section","image","getMetaImageUrls","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_components_common_meta__WEBPACK_IMPORTED_MODULE_9__","location","type","_components_common_layout__WEBPACK_IMPORTED_MODULE_6__","bodyClass","mainClass","className","Spirit","page","xl","h4","gatsby_link__WEBPACK_IMPORTED_MODULE_3___default","to","_tryghost_helpers_gatsby__WEBPACK_IMPORTED_MODULE_5__","separator","limit","classes","permalink","linkClasses","h3","title","dangerouslySetInnerHTML","__html","html","length","h5","_components_common__WEBPACK_IMPORTED_MODULE_8__","React","Component","propTypes","PropTypes","shape","site","siteMetadata","siteUrl","string","isRequired","description","object","array","articleQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","join","profile_image","defaultProps","bool","ImageMeta","_ref","react_default","Helmet_default","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","href","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","meta_ImageMeta","tags","arrayOf","ArticleMetaMD","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","_ref2","url","resolve","pathname","meta_ArticleMetaGhost","meta_ArticleMetaMD","meta_WebsiteMeta","imageUrls","default","process","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-templates-ghost-faq-js-ff27eca356de148bb548.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport Prism from 'prismjs'\nimport { Tags } from '@tryghost/helpers-gatsby'\n\nimport { Layout } from '../../components/common/layout'\nimport { Spirit } from '../../styles/spirit-styles'\nimport { RelatedPosts } from '../../components/common'\nimport { MetaData, getMetaImageUrls } from '../../components/common/meta'\n\nclass FAQ extends React.Component {\n    componentDidMount() {\n        // TODO: Prism for Webpack currently supports basic languages. `handlebars`,\n        // `yaml`, and `json` are not amongst those. To load those languages, we'd\n        // need to load them specifically following the webpack instructions here:\n        // https://prismjs.com/#examples and https://github.com/mAAdhaTTah/babel-plugin-prismjs\n        // The other option is to create a plugin for GhostPosts.\n        Prism.highlightAll()\n    }\n\n    render() {\n        const post = this.props.data.ghostPost\n        const { relatedPosts, section } = this.props.pageContext\n        const image = getMetaImageUrls(section)\n\n        return (\n            <>\n                <MetaData data={this.props.data} location={this.props.location} type=\"article\" image={image} />\n                <Layout bodyClass=\"bg-white\" mainClass=\"bg-whitegrey-l2 pb10\">\n\n                    <div className=\"bg-faq bb b--whitegrey\">\n                        <div className={`${Spirit.page.xl} pt-vw7 pt-vw1-ns pb-vw1`}>\n                            <h1 className={`${Spirit.h4} white`}>\n                                <Link to=\"/faq/\" className=\"link dim white fw3\">Frequently Asked Questions</Link>\n                                <Tags\n                                    post={post}\n                                    separator=\"\"\n                                    limit={1}\n                                    classes=\"white titleslash-white pl4 ml4 relative\"\n                                    permalink=\"/faq/:slug/\"\n                                    linkClasses=\"link dim white\"\n                                />\n                            </h1>\n                        </div>\n                    </div>\n\n                    <div className={`${Spirit.page.xl} grid-12`}>\n                        <section className=\"bg-white br4 shadow-1 col-12 col-8-l mt5 pa5 pl5 pl3-ns mt10-ns pa15-ns pt10-ns pl7-ns\">\n                            <div className=\"mw-content\">\n                                <div className=\"flex flex-row items-start\">\n                                    <div className=\"flex-shrink-0 flex justify-center items-center w5 h5 w6-l h6-l mr4 fw5 br-100 tc white bg-faq-color lh-normal nudge-bottom--2-ns\">?</div>\n                                    <h1 className={`${Spirit.h3} ma0 f4 nudge-bottom--4-ns`}>{post.title}</h1>\n                                </div>\n\n                                <div className=\"flex flex-column flex-row-ns items-start mt5 mt3-ns\">\n                                    <div className=\"dn flex-ns flex-shrink-0 justify-center items-center w5 h5 w6-l h6-l mr4 f8 fw5 br-100 tc faq-color ba b--faq-color mb2 mb0-ns nudge-top--2-m\">&raquo;</div>\n                                    <section className=\"post-content faq-content external-scripts\" dangerouslySetInnerHTML={{ __html: post.html }} />\n                                </div>\n                            </div>\n                        </section>\n\n                        <div className=\"col-12 col-4-l\">\n                            { relatedPosts.length ?\n                                <div className=\"mw-content-ns pl5 pa15-ns pt5 pt5-m pt15-l pb0 pb0-m pb15-l center mt6\">\n                                    <h4 className={`${Spirit.h5} mb4 midgrey`}>Related Questions</h4>\n                                    <RelatedPosts relatedPosts={relatedPosts} />\n                                </div> :\n                                null\n                            }\n                        </div>\n                    </div>\n                </Layout>\n            </>\n        )\n    }\n}\n\nFAQ.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object.isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n    pageContext: PropTypes.shape({\n        relatedPosts: PropTypes.array.isRequired,\n        section: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default FAQ\n\nexport const articleQuery = graphql`\n    query($slug: String!) {\n        site {\n            ...SiteMetaFields\n        }\n        ghostPost(slug: { eq: $slug }) {\n            ...GhostPostFields\n        }\n    }\n`\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://vwa.la/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import { tags as tagsHelper } from '@tryghost/helpers';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport getAuthorProperties from './getAuthorProperties';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { getMetaImageUrls } from '.';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://vwa.la/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.vwa.la/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport ImageMeta from './ImageMeta';\n\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n    <>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <link rel=\"canonical\" href={canonical} />\n            <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:url\" content={canonical} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:url\" content={canonical} />\n            <meta name=\"twitter:site\" content=\"@tryghost\" />\n            <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n        </Helmet>\n        <ImageMeta image={image} />\n    </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types';\nimport url from 'url';\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.vwa.la`\n\nconst imageUrls = {\n    // faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    // integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    // tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/hero.png`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}