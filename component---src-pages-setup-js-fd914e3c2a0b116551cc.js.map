{"version":3,"sources":["webpack:///./src/components/setup/SetupBox.js","webpack:///./src/pages/setup.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["SetupBox","_ref","to","href","icon","iconClass","headingClass","title","children","react_default","a","createElement","common","className","radius","name","Spirit","h4","small","propTypes","PropTypes","node","isRequired","string","SetupPage","data","location","imageUrl","getMetaImageUrls","Fragment","meta","type","description","image","layout","mainClass","bodyClass","page","xl","sectionHeading","sectionSubHeading","setup_SetupBox","shape","site","siteMetadata","siteUrl","pathname","pageQuery","ImageMeta","Helmet_default","content","property","ArticleMetaMD","canonical","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","primaryTag","keywords","length","seoImage","meta_title","meta_description","excerpt","rel","map","keyword","i","key","timeToRead","_","join","meta_ImageMeta","arrayOf","number","WebsiteMeta","oneOf","MetaData","fetchAuthorData","overwriteDefaultImage","_ref2","ghostPost","url","resolve","meta_ArticleMetaMD","meta_WebsiteMeta","object","bool","imageUrls","default","process","section","proptypes","__webpack_require__","d","__webpack_exports__","meta_MetaData","meta_getMetaImageUrls"],"mappings":"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","file":"component---src-pages-setup-js-fd914e3c2a0b116551cc.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box, Icon } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst SetupBox = ({ to, href, icon, iconClass, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey setup-box-min-height\"\n        radius=\"4\"\n    >\n        <Icon name={icon} className={iconClass} />\n        <h4 className={`${Spirit.h4} darkgrey ${headingClass}`}>{title}</h4>\n        <div className={`${Spirit.small} mt1 midgrey`}>{children}</div>\n    </Box>\n)\n\nSetupBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    icon: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n    iconClass: PropTypes.string,\n    headingClass: PropTypes.string,\n}\n\nexport default SetupBox\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Layout } from '../components/common/layout';\nimport { getMetaImageUrls, MetaData } from '../components/common/meta';\nimport { SetupBox } from '../components/setup';\nimport { Spirit } from '../styles/spirit-styles';\n\n\nconst SetupPage = ({ data, location }) => {\n    // Add meta title and description for this page here to overwrite the site meta data as set in the config\n    const title = `How To Install Ghost: Setup & Configuration - Open Source Publishing`\n    const description = `All the tools you need to get started with Ghost 👉Self-hosted install & setup, local install guide for development, contribution guidelines & premium hosted services!`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                type=\"website\"\n                title={title || data.site.siteMetadata.title}\n                description={description || data.site.siteMetadata.description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n                <section className=\"bg-setup\">\n                    <div className={`${Spirit.page.xl} tc-ns pt-vw6 pt-vw5-ns pb-vw5 white`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}>Setup Guide Y</h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            Blah\n                        </p>\n                    </div>\n                </section>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n                        {/* <SetupBox href=\"https://vwa.la/pricing/\" title=\"Ghost(Pro)\" icon=\"ghost-pro-logo\" iconClass=\"w9 h9\" headingClass=\"mt2\">\n                            <strong>Fully managed PaaS</strong> with 1-click deployment, worldwide CDN, backups, upgrades & security\n                        </SetupBox> */}\n\n                        <SetupBox to=\"/install/ubuntu/\" title=\"Ubuntu\" icon=\"ubuntu-logo\" iconClass=\"w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                A full guide for installing Ghost on Ubuntu <strong>16.04 LTS</strong> and <strong>18.04 LTS</strong> <em>(Recommended)</em>\n                            </p>\n                        </SetupBox>\n\n                        {/* <SetupBox href=\"https://hub.docker.com/_/ghost/\" title=\"Docker\" icon=\"docker-logo\" iconClass=\"w10 h10\" headingClass=\"mt1\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Unofficial community package</strong> for running Ghost inside a Docker container\n                            </p>\n                        </SetupBox> */}\n\n                        <SetupBox to=\"/install/local/\" title=\"Local install\" icon=\"terminal\" iconClass=\"fill-midlightgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Fast-track</strong> local install for running Ghost on your computer or doing theme development\n                            </p>\n                        </SetupBox>\n\n                        <SetupBox to=\"/install/source/\" title=\"Install from Source\" icon=\"github-outline\" iconClass=\"fill-darkgrey w8 h8\" headingClass=\"mt2\">\n                            <p className={`${Spirit.small} mw70`}>\n                                <strong>Advanced developer guide</strong> for working directly on Ghost Core and Ghost Admin\n                            </p>\n                        </SetupBox>\n                    </section>\n                </div>\n            </Layout>\n        </>\n    )\n}\n\nSetupPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SetupPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string.isRequired,\n}\n\nexport default ImageMeta\n","import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { getMetaImageUrls } from '.';\nimport ImageMeta from './ImageMeta';\n\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta name=\"og:type\" content=\"article\" />\n                <meta name=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n                <meta name=\"twitter:creator\" content=\"@vwalamarketing\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://vwa.la/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/vwalamarketing/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://blog.vwa.la/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Helmet from \"react-helmet\";\nimport ImageMeta from './ImageMeta';\n\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n    <>\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description} />\n            <link rel=\"canonical\" href={canonical} />\n            <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            <meta property=\"og:url\" content={canonical} />\n            <meta name=\"twitter:title\" content={title} />\n            <meta name=\"twitter:description\" content={description} />\n            <meta name=\"twitter:url\" content={canonical} />\n            <meta name=\"twitter:site\" content=\"@vwalamarketing\" />\n            <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${image}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n        </Helmet>\n        <ImageMeta image={image} />\n    </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://blog.vwa.la/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport url from 'url';\n// import ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD';\nimport WebsiteMeta from './WebsiteMeta';\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            // return (\n            //     <ArticleMetaGhost\n            //         data={data}\n            //         canonical={canonical}\n            //         fetchAuthorData={fetchAuthorData}\n            //         title={title}\n            //         image={image}\n            //         overwriteDefaultImage={overwriteDefaultImage}\n            //     />\n            // )\n            return null\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types';\nimport url from 'url';\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.vwa.la`\n\nconst imageUrls = {\n    // faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    // integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    // tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/hero.png`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}